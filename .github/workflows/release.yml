name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "## What's Changed

          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

          ## Installation

          ### Using Cargo
          \`\`\`bash
          cargo install awsom
          \`\`\`

          ### Download Binary
          Download the appropriate binary for your platform below.

          ### Homebrew (macOS/Linux)
          \`\`\`bash
          brew install oleksiimorozenko/tap/awsom
          \`\`\`" \
            ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') && '--prerelease' || '' }}

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_name: awsom-linux-amd64
          # Linux ARM64
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            archive_name: awsom-linux-arm64
          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_name: awsom-macos-amd64
          # macOS ARM64 (Apple Silicon)
          - os: macos-latest
            target: aarch64-apple-darwin
            archive_name: awsom-macos-arm64
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_name: awsom-windows-amd64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux)
        if: runner.os == 'Linux'
        run: strip target/${{ matrix.target }}/release/awsom

      - name: Strip binary (macOS)
        if: matrix.os == 'macos-latest'
        run: strip target/${{ matrix.target }}/release/awsom

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.archive_name }}.tar.gz awsom
          cd ../../..
          shasum -a 256 ${{ matrix.archive_name }}.tar.gz > ${{ matrix.archive_name }}.tar.gz.sha256

      - name: Create archive (Windows)
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.archive_name }}.zip awsom.exe
          cd ../../..
          $hash = (Get-FileHash -Algorithm SHA256 ${{ matrix.archive_name }}.zip).Hash.ToLower()
          "$hash  ${{ matrix.archive_name }}.zip" | Out-File -Encoding ASCII ${{ matrix.archive_name }}.zip.sha256

      - name: Upload release assets (Unix)
        if: runner.os != 'Windows'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.ref_name }} \
            ${{ matrix.archive_name }}.tar.gz \
            ${{ matrix.archive_name }}.tar.gz.sha256

      - name: Upload release assets (Windows)
        if: runner.os == 'Windows'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.ref_name }} `
            ${{ matrix.archive_name }}.zip `
            ${{ matrix.archive_name }}.zip.sha256

  publish-crates:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  update-homebrew-tap:
    name: Update Homebrew Tap
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.TAP_UPDATE_APP_ID }}
          private-key: ${{ secrets.TAP_UPDATE_APP_PRIVATE_KEY }}
          owner: oleksiimorozenko
          repositories: homebrew-tap

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version and calculate checksums
        id: release_info
        env:
          VERSION: ${{ needs.create-release.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Download the macOS AMD64 tarball to calculate SHA256
          curl -sL "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/awsom-macos-amd64.tar.gz" -o awsom-macos-amd64.tar.gz
          MACOS_AMD64_SHA256=$(shasum -a 256 awsom-macos-amd64.tar.gz | awk '{print $1}')
          echo "macos_amd64_sha256=$MACOS_AMD64_SHA256" >> $GITHUB_OUTPUT

          # Download the macOS ARM64 tarball to calculate SHA256
          curl -sL "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/awsom-macos-arm64.tar.gz" -o awsom-macos-arm64.tar.gz
          MACOS_ARM64_SHA256=$(shasum -a 256 awsom-macos-arm64.tar.gz | awk '{print $1}')
          echo "macos_arm64_sha256=$MACOS_ARM64_SHA256" >> $GITHUB_OUTPUT

          # Download the Linux AMD64 tarball to calculate SHA256
          curl -sL "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/awsom-linux-amd64.tar.gz" -o awsom-linux-amd64.tar.gz
          LINUX_AMD64_SHA256=$(shasum -a 256 awsom-linux-amd64.tar.gz | awk '{print $1}')
          echo "linux_amd64_sha256=$LINUX_AMD64_SHA256" >> $GITHUB_OUTPUT

          # Download the Linux ARM64 tarball to calculate SHA256
          curl -sL "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/awsom-linux-arm64.tar.gz" -o awsom-linux-arm64.tar.gz
          LINUX_ARM64_SHA256=$(shasum -a 256 awsom-linux-arm64.tar.gz | awk '{print $1}')
          echo "linux_arm64_sha256=$LINUX_ARM64_SHA256" >> $GITHUB_OUTPUT

      - name: Update Homebrew formula
        env:
          VERSION: ${{ steps.release_info.outputs.version }}
          MACOS_AMD64_SHA256: ${{ steps.release_info.outputs.macos_amd64_sha256 }}
          MACOS_ARM64_SHA256: ${{ steps.release_info.outputs.macos_arm64_sha256 }}
          LINUX_AMD64_SHA256: ${{ steps.release_info.outputs.linux_amd64_sha256 }}
          LINUX_ARM64_SHA256: ${{ steps.release_info.outputs.linux_arm64_sha256 }}
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          # Clone the tap repository using the GitHub App token
          git clone https://x-access-token:${GH_TOKEN}@github.com/oleksiimorozenko/homebrew-tap.git tap-repo
          cd tap-repo

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create or update the formula
          cat > Formula/awsom.rb << 'EOF'
          class Awsom < Formula
            desc "k9s-like TUI for AWS SSO sessions"
            homepage "https://github.com/oleksiimorozenko/awsom"
            version "VERSION_PLACEHOLDER"
            license "Apache-2.0"

            on_macos do
              if Hardware::CPU.intel?
                url "https://github.com/oleksiimorozenko/awsom/releases/download/vVERSION_PLACEHOLDER/awsom-macos-amd64.tar.gz"
                sha256 "MACOS_AMD64_SHA256_PLACEHOLDER"

                def install
                  bin.install "awsom"
                end
              end
              if Hardware::CPU.arm?
                url "https://github.com/oleksiimorozenko/awsom/releases/download/vVERSION_PLACEHOLDER/awsom-macos-arm64.tar.gz"
                sha256 "MACOS_ARM64_SHA256_PLACEHOLDER"

                def install
                  bin.install "awsom"
                end
              end
            end

            on_linux do
              if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
                url "https://github.com/oleksiimorozenko/awsom/releases/download/vVERSION_PLACEHOLDER/awsom-linux-amd64.tar.gz"
                sha256 "LINUX_AMD64_SHA256_PLACEHOLDER"

                def install
                  bin.install "awsom"
                end
              end
              if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
                url "https://github.com/oleksiimorozenko/awsom/releases/download/vVERSION_PLACEHOLDER/awsom-linux-arm64.tar.gz"
                sha256 "LINUX_ARM64_SHA256_PLACEHOLDER"

                def install
                  bin.install "awsom"
                end
              end
            end

            test do
              assert_match version.to_s, shell_output("#{bin}/awsom --version")
            end
          end
          EOF

          # Replace placeholders with actual values
          sed -i "s/VERSION_PLACEHOLDER/${VERSION}/g" Formula/awsom.rb
          sed -i "s/MACOS_AMD64_SHA256_PLACEHOLDER/${MACOS_AMD64_SHA256}/g" Formula/awsom.rb
          sed -i "s/MACOS_ARM64_SHA256_PLACEHOLDER/${MACOS_ARM64_SHA256}/g" Formula/awsom.rb
          sed -i "s/LINUX_AMD64_SHA256_PLACEHOLDER/${LINUX_AMD64_SHA256}/g" Formula/awsom.rb
          sed -i "s/LINUX_ARM64_SHA256_PLACEHOLDER/${LINUX_ARM64_SHA256}/g" Formula/awsom.rb

          # Commit and push changes
          git add Formula/awsom.rb
          git commit -m "Update awsom to v${VERSION}"
          git push origin main
